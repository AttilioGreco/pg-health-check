# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 1

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

dockers:
  - image_templates:
      - ghcr.io/attiliogreco/pg-health-check:latest
      - ghcr.io/attiliogreco/pg-health-check:{{ .Tag }}
    dockerfile: ./build-file/Dockerfile
    extra_files:
      - ./build-file/default-config.yaml
    build_flag_templates:
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.description={{ .ProjectName }}
      - --label=org.opencontainers.image.url=https://github.com/AttilioGreco/pg-health-check
      - --label=org.opencontainers.image.source=https://github.com/AttilioGreco/pg-health-check
      - --label=org.opencontainers.image.version={{ .Version }}
      - --label=org.opencontainers.image.created={{ time "2006-01-02T15:04:05Z07:00" }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.licenses=MIT

nfpms:
  # note that this is an array of nfpm configs
  - id: package
    package_name: pg-health-check
    file_name_template: "{{ .ConventionalFileName }}"

    # Build IDs for the builds you want to create NFPM packages for.
    # Defaults empty, which means no filtering.
    builds: []
    vendor: Attilio Greco
    homepage: https://blog.crazylinux.it
    maintainer: Attilio Greco <attilio.greco@crazylinux.it>

    # Your app's description.
    description: |-
      pg-health-check is a simple health check for PostgreSQL.
      /write is used to check if the database is writable.
      /read is used to check if the database is readable.

    # Your app's license.
    license: MIT

    # Formats to be generated.
    formats:
      # - apk
      - deb
      - rpm
    scripts:
      preinstall: "build-file/scripts/preinstall.sh"
      # preremove: "build-file/scripts/preremove.sh"
      # postinstall: "build-file/scripts/postinstall.sh"
      postremove: "build-file/scripts/postremove.sh"
    umask: 0o002
    # dependencies: []
    # provides: []
    # recommends: []
    # suggests: []
    # conflicts: []
    # replaces: []
    # bindir: /usr/bin
    # prerelease: beta1
    version_metadata: git
    # section: default
    # priority: extra
    # meta: true
    contents:
      # Basic file that applies to all packagers
      - src: build-file/default-config.yaml
        dst: /etc/pg-health-check/config.yaml
        type: "config|noreplace"
        file_info:
          mode: 0400
      - src: build-file/systemd-unit/pg-health-check.service
        dst: /usr/lib/systemd/system/pg-health-check.service
        type: "config"
        file_info:
          mode: 0644
